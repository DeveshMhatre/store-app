{"version":3,"sources":["Utils/cartReducer.ts","Contexts/CartContext.tsx","Components/HeaderButtons.tsx","Components/Header.tsx","Components/AddCart.tsx","Components/ProductContainer.tsx","Utils/useFetch-hook/reducer.ts","Utils/useFetch-hook/useFetch.tsx","Contexts/ProductsContext.tsx","Utils/categoryReducer.ts","Contexts/CategoryContext.tsx","Components/Category.tsx","Components/Categories.tsx","Components/Products.tsx","Assets/illustration.svg","Components/EmptyCart.tsx","Components/TotalCartCard.tsx","Components/CartProductCard.tsx","Components/Cart.tsx","Components/App.tsx","index.tsx"],"names":["cartReducer","state","action","type","payload","quantity","amount","price","total_items","total_amount","items","filter","item","id","map","isVisible","initialValue","CartContext","createContext","dispatch","CartContextProvider","children","useReducer","contextValue","useMemo","Provider","value","HeaderButtons","useContext","className","onClick","style","fontSize","Badge","classes","root","badgeContent","color","max","showZero","Header","AddCart","added","handleAddClick","handleIncreaseClick","ProductContainer","product","useState","isOpen","setIsOpen","isAdded","setIsAdded","title","useEffect","some","i","Snackbar","anchorOrigin","vertical","horizontal","open","autoHideDuration","onClose","message","src","image","alt","description","toFixed","category","reducer","isLoading","data","error","useFetch","url","a","fetch","response","json","getData","ProductsContext","ProductsContextProvider","products","categoryReducer","categories","CategoryContext","CategoryContextProvider","Category","selected","setSelected","includes","Categories","Set","index","Products","CircularProgress","EmptyCart","EmptyCartImg","TotalCartCard","cartItems","disabled","CartProductCard","Cart","document","body","overflow","App","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.f87815cd.chunk.js","sourcesContent":["import { CartType, CartItemType } from './types'\n\nexport type actionType =\n  | { type: 'ADD'; payload: CartItemType }\n  | { type: 'REMOVE'; payload: CartItemType }\n  | { type: 'INCREASE'; payload: CartItemType }\n  | { type: 'DECREASE'; payload: CartItemType }\n  | { type: 'SHOW' }\n  | { type: 'HIDE' }\n  | { type: 'CLEAR' }\n\nconst cartReducer = (state: CartType, action: actionType): CartType => {\n  switch (action.type) {\n    case 'ADD':\n      action.payload.quantity = 1\n      action.payload.amount = action.payload.price * action.payload.quantity\n\n      return {\n        ...state,\n        total_items: state.total_items + 1,\n        total_amount: state.total_amount + action.payload.price,\n        items: [...state.items, action.payload],\n      }\n    case 'REMOVE':\n      return {\n        ...state,\n        total_items: state.total_items - 1,\n        total_amount: state.total_amount - action.payload.price,\n        items: state.items.filter((item) => item.id !== action.payload.id),\n      }\n    case 'INCREASE':\n      return {\n        ...state,\n        total_items: state.total_items + 1,\n        total_amount: state.total_amount + action.payload.price,\n        items: state.items.map((item) =>\n          item.id === action.payload.id\n            ? {\n                ...item,\n                quantity: item.quantity + 1,\n                amount: item.amount + item.price,\n              }\n            : item,\n        ),\n      }\n    case 'DECREASE':\n      return {\n        ...state,\n        total_items: state.total_items - 1,\n        total_amount: state.total_amount - action.payload.price,\n        items: state.items.map((item) =>\n          item.id === action.payload.id\n            ? {\n                ...item,\n                quantity: item.quantity - 1,\n                amount: item.amount - item.price,\n              }\n            : item,\n        ),\n      }\n    case 'SHOW':\n      return {\n        ...state,\n        isVisible: true,\n      }\n    case 'HIDE':\n      return {\n        ...state,\n        isVisible: false,\n      }\n    case 'CLEAR':\n      return {\n        total_amount: 0,\n        total_items: 0,\n        items: [],\n        isVisible: true,\n      }\n    default:\n      return state\n  }\n}\n\nexport default cartReducer\n","import React, { createContext, useReducer, useMemo } from 'react'\n\nimport { CartType } from '../Utils/types'\nimport cartReducer, { actionType } from '../Utils/cartReducer'\n\ntype Props = {\n  children: React.ReactNode\n}\n\nconst initialValue: CartType = {\n  total_items: 0,\n  total_amount: 0,\n  items: [],\n  isVisible: false,\n}\n\nexport const CartContext = createContext<{\n  state: CartType\n  dispatch: React.Dispatch<actionType>\n}>({ state: initialValue, dispatch: () => null })\n\nconst CartContextProvider: React.FC<Props> = ({ children }: Props) => {\n  const [state, dispatch] = useReducer(cartReducer, initialValue)\n\n  const contextValue = useMemo(() => {\n    return { state, dispatch }\n  }, [state])\n\n  return (\n    <CartContext.Provider value={contextValue}>{children}</CartContext.Provider>\n  )\n}\n\nexport default CartContextProvider\n","import React, { useContext } from 'react'\n\nimport { CartContext } from '../Contexts/CartContext'\n\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart'\nimport Badge from '@material-ui/core/Badge'\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack'\n\nconst HeaderButtons: React.FC = () => {\n  const { state, dispatch } = useContext(CartContext)\n\n  if (state.isVisible) {\n    return (\n      <button\n        className=\"header__btn--back\"\n        onClick={() => dispatch({ type: 'HIDE' })}\n      >\n        <ArrowBackIcon\n          className=\"header__back\"\n          style={{ fontSize: 'clamp(3.5rem, 10vw, 4.5rem)' }}\n        />\n      </button>\n    )\n  } else {\n    return (\n      <button\n        className=\"header__btn--cart\"\n        onClick={() => dispatch({ type: 'SHOW' })}\n      >\n        <Badge\n          classes={{ root: `badge` }}\n          badgeContent={state.total_items}\n          color=\"secondary\"\n          max={10}\n          showZero\n        >\n          <ShoppingCartIcon\n            className=\"header__cart\"\n            style={{ fontSize: 'clamp(2.5rem, 8vw, 3.5rem)' }}\n          />\n        </Badge>\n      </button>\n    )\n  }\n}\n\nexport default HeaderButtons\n","import React from 'react'\n\nimport HeaderButtons from './HeaderButtons'\n\nconst Header: React.FC = () => {\n  return (\n    <header className=\"header\">\n      <h2 className=\"header__logo\">Shop 4 All</h2>\n      <HeaderButtons />\n    </header>\n  )\n}\n\nexport default Header\n","import React from 'react'\n\ntype Props = {\n  added: boolean\n  handleAddClick: React.MouseEventHandler<HTMLButtonElement>\n  handleIncreaseClick: React.MouseEventHandler<HTMLButtonElement>\n}\n\nconst AddCart: React.FC<Props> = ({\n  added,\n  handleAddClick,\n  handleIncreaseClick,\n}: Props) => {\n  if (!added) {\n    return (\n      <button\n        className=\"product__cart-group--add-to-cart\"\n        onClick={handleAddClick}\n      >\n        Add to Cart\n      </button>\n    )\n  } else {\n    return (\n      <button\n        className=\"product__cart-group--add-more\"\n        onClick={handleIncreaseClick}\n      >\n        Add more\n      </button>\n    )\n  }\n}\n\nexport default AddCart\n","import React, { useEffect, useContext, useState } from 'react'\n\nimport { CartContext } from '../Contexts/CartContext'\n\nimport AddCart from './AddCart'\n\nimport { Product } from '../Utils/types'\n\nimport Snackbar from '@material-ui/core/Snackbar'\n\ntype Props = {\n  key: number\n  product: Product\n}\n\nconst ProductContainer: React.FC<Props> = ({ product }: Props) => {\n  const [isOpen, setIsOpen] = useState(false)\n  const [isAdded, setIsAdded] = useState(false)\n\n  const { state, dispatch } = useContext(CartContext)\n\n  const item = {\n    id: product.id,\n    title: product.title,\n    price: product.price,\n    quantity: 0,\n    amount: 0,\n  }\n\n  useEffect(() => {\n    const added = state.items.some((i) => i.id === product.id)\n    setIsAdded(added)\n  }, [state.items])\n\n  const handleAddClick = () => {\n    if (!isOpen) {\n      setIsOpen(true)\n    }\n\n    dispatch({ type: 'ADD', payload: item })\n  }\n\n  const handleIncreaseClick = () => {\n    if (!isOpen) {\n      setIsOpen(true)\n    }\n\n    dispatch({ type: 'INCREASE', payload: item })\n  }\n\n  const handleCloseClick = () => {\n    setIsOpen(false)\n  }\n\n  return (\n    <div className=\"product\">\n      <Snackbar\n        classes={{ root: `snackbar` }}\n        anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}\n        open={isOpen}\n        autoHideDuration={5000}\n        onClose={handleCloseClick}\n        message=\"Item added to Cart!\"\n      />\n\n      <img src={product.image} alt={product.title} className=\"product__image\" />\n      <p title={product.title} className=\"product__title\">\n        {product.title}\n      </p>\n      <p title={product.description} className=\"product__desc\">\n        {product.description}\n      </p>\n\n      <span className=\"product__cart-group\">\n        <p className=\"product__cart-group--price\">\n          &#36; {product.price.toFixed(2)}\n        </p>\n        <AddCart\n          added={isAdded}\n          handleAddClick={handleAddClick}\n          handleIncreaseClick={handleIncreaseClick}\n        />\n      </span>\n      <div className=\"product__category\">\n        <span className=\"product__category--label\">{product.category}</span>\n      </div>\n    </div>\n  )\n}\n\nexport default ProductContainer\n","import { Product, FetchInitialValue } from '../types'\n\ntype actionType =\n  | { type: 'SUCCESS'; payload: Product[] }\n  | { type: 'ERROR'; payload: string }\n\nconst reducer = (\n  state: FetchInitialValue,\n  action: actionType,\n): FetchInitialValue => {\n  switch (action.type) {\n    case 'SUCCESS':\n      return {\n        ...state,\n        isLoading: false,\n        data: action.payload,\n      }\n    case 'ERROR':\n      return {\n        ...state,\n        isLoading: false,\n        error: action.payload,\n      }\n    default:\n      return state\n  }\n}\n\nexport default reducer\n","import { useEffect, useReducer } from 'react'\n\nimport reducer from './reducer'\n\nimport { FetchInitialValue } from '../types'\n\nexport const initialValue: FetchInitialValue = {\n  isLoading: true,\n  data: [],\n  error: '',\n}\n\nconst useFetch = (url: string): FetchInitialValue => {\n  const [state, dispatch] = useReducer(reducer, initialValue)\n\n  useEffect(() => {\n    const getData = async () => {\n      try {\n        const response = await fetch(url)\n        const data = await response.json()\n\n        dispatch({ type: 'SUCCESS', payload: data })\n      } catch (error) {\n        dispatch({ type: 'ERROR', payload: error })\n      }\n    }\n\n    getData()\n  }, [])\n\n  return state\n}\n\nexport default useFetch\n","import React, { createContext, useMemo } from 'react'\n\nimport useFetch, { initialValue } from '../Utils/useFetch-hook/useFetch'\n\nimport { FetchInitialValue } from '../Utils/types'\n\ntype Props = {\n  children: React.ReactNode\n}\n\nexport const ProductsContext = createContext<FetchInitialValue>(initialValue)\n\nconst ProductsContextProvider: React.FC<Props> = ({ children }: Props) => {\n  const products = useFetch('https://fakestoreapi.com/products/')\n\n  const contextValue = useMemo(() => {\n    return products\n  }, [products])\n\n  return (\n    <ProductsContext.Provider value={contextValue}>\n      {children}\n    </ProductsContext.Provider>\n  )\n}\n\nexport default ProductsContextProvider\n","export type stateType = {\n  categories: Array<string>\n}\n\nexport type actionType =\n  | { type: 'ADD'; payload: string }\n  | { type: 'REMOVE'; payload: string }\n\nconst categoryReducer = (state: stateType, action: actionType): stateType => {\n  switch (action.type) {\n    case 'ADD':\n      return {\n        categories: [...state.categories, action.payload],\n      }\n    case 'REMOVE':\n      return {\n        categories: state.categories.filter(\n          (category) => category !== action.payload,\n        ),\n      }\n    default:\n      return state\n  }\n}\n\nexport default categoryReducer\n","import React, { createContext, useReducer, useMemo } from 'react'\n\nimport categoryReducer, {\n  stateType,\n  actionType,\n} from '../Utils/categoryReducer'\n\nexport const CategoryContext = createContext<{\n  state: stateType\n  dispatch: React.Dispatch<actionType>\n}>({ state: { categories: [] }, dispatch: () => null })\n\ntype Props = {\n  children: React.ReactNode\n}\n\nconst CategoryContextProvider: React.FC<Props> = ({ children }: Props) => {\n  const [state, dispatch] = useReducer(categoryReducer, { categories: [] })\n\n  const contextValue = useMemo(() => {\n    return { state, dispatch }\n  }, [state])\n\n  return (\n    <CategoryContext.Provider value={contextValue}>\n      {children}\n    </CategoryContext.Provider>\n  )\n}\n\nexport default CategoryContextProvider\n","import React, { useState, useContext } from 'react'\n\nimport { CategoryContext } from '../Contexts/CategoryContext'\n\ntype Props = {\n  category: string\n}\n\nconst Category: React.FC<Props> = ({ category }: Props) => {\n  const [selected, setSelected] = useState('category--invis')\n  const { state, dispatch } = useContext(CategoryContext)\n\n  const handleClick = () => {\n    if (state.categories.includes(category)) {\n      dispatch({ type: 'REMOVE', payload: category })\n      setSelected('category--invis')\n    } else {\n      dispatch({ type: 'ADD', payload: category })\n      setSelected('category--visible')\n    }\n  }\n  return (\n    <button className={`category ${selected}`} onClick={handleClick}>\n      {category}\n    </button>\n  )\n}\n\nexport default Category\n","import React, { useContext } from 'react'\n\nimport { ProductsContext } from '../Contexts/ProductsContext'\n\nimport Category from './Category'\n\nconst Categories: React.FC = () => {\n  const products = useContext(ProductsContext).data\n\n  const categories = [...new Set(products.map((product) => product.category))]\n\n  return (\n    <div className=\"categories\">\n      <div className=\"categories__label\">Filter by Category</div>\n      <div className=\"categories__chip\">\n        {categories.map((category, index) => (\n          <Category key={index} category={category} />\n        ))}\n      </div>\n    </div>\n  )\n}\n\nexport default Categories\n","import React, { useContext } from 'react'\n\nimport ProductContainer from './ProductContainer'\nimport Categories from './Categories'\n\nimport { CircularProgress } from '@material-ui/core/'\n\nimport { ProductsContext } from '../Contexts/ProductsContext'\nimport { CategoryContext } from '../Contexts/CategoryContext'\n\nconst Products: React.FC = () => {\n  const products = useContext(ProductsContext)\n\n  const state = useContext(CategoryContext).state\n\n  if (products.isLoading) {\n    return (\n      <article className=\"products--loading\">\n        <CircularProgress style={{ color: '#08c7bb' }} />\n      </article>\n    )\n  } else {\n    return (\n      <article className=\"products\">\n        <h1 className=\"products__title\">\n          Buy from a wide variety of accessories\n        </h1>\n\n        <Categories />\n\n        <section className=\"products__listing\">\n          {products.data.map((product) => {\n            if (state.categories.includes(product.category)) {\n              return <ProductContainer key={product.id} product={product} />\n            }\n          })}\n        </section>\n      </article>\n    )\n  }\n}\n\nexport default Products\n","export default __webpack_public_path__ + \"static/media/illustration.cb6734b3.svg\";","import React from 'react'\n\nimport EmptyCartImg from '../Assets/illustration.svg'\n\nconst EmptyCart: React.FC = () => (\n  <article className=\"empty-cart\">\n    <div className=\"text-container\">\n      <h1 className=\"empty-cart__title\">Your cart is empty!</h1>\n      <h3 className=\"empty-cart__subtitle\">Please go back and add items</h3>\n    </div>\n    <img src={EmptyCartImg} className=\"empty-cart__img\" />\n  </article>\n)\n\nexport default EmptyCart\n","import React, { useContext } from 'react'\n\nimport { CartType } from '../Utils/types'\n\nimport { CartContext } from '../Contexts/CartContext'\n\ntype Props = {\n  cartItems: CartType\n}\n\nconst TotalCartCard: React.FC<Props> = ({ cartItems }: Props) => {\n  const { state, dispatch } = useContext(CartContext)\n\n  return (\n    <section className=\"total-card\">\n      <div className=\"total-card__items\">\n        <p>Total items</p>\n        <p>{cartItems.total_items}</p>\n      </div>\n      <div className=\"total-card__amount\">\n        <p>Total amount</p>\n        <p>{cartItems.total_amount.toFixed(2)}</p>\n      </div>\n      <div className=\"total-card__actions\">\n        <button className=\"total-card__actions--checkout\" disabled>\n          Checkout\n        </button>\n        <button\n          className=\"total-card__actions--clear\"\n          onClick={() => dispatch({ type: 'CLEAR' })}\n        >\n          Clear\n        </button>\n      </div>\n    </section>\n  )\n}\n\nexport default TotalCartCard\n","import React from 'react'\n\nimport { CartItemType } from '../Utils/types'\nimport { actionType } from '../Utils/cartReducer'\n\ntype Props = {\n  key: number\n  product: CartItemType\n  dispatch: React.Dispatch<actionType>\n}\n\nconst CartProductCard: React.FC<Props> = ({ product, dispatch }: Props) => {\n  const handleIncreaseClick = () => {\n    dispatch({ type: 'INCREASE', payload: product })\n  }\n\n  const handleDecreaseClick = () => {\n    product.quantity > 1\n      ? dispatch({ type: 'DECREASE', payload: product })\n      : dispatch({ type: 'REMOVE', payload: product })\n  }\n\n  return (\n    <div className=\"cart-product\">\n      <div className=\"cart-product__name\">{product.title}</div>\n      <div className=\"cart-product__actions\">\n        <p className=\"cart-product__actions--amount\">\n          &#36; {product.amount.toFixed(2)}\n        </p>\n        <div className=\"cart-product__actions--shop\">\n          <button\n            title=\"Add more items\"\n            className=\"product__inc\"\n            onClick={handleIncreaseClick}\n          >\n            +\n          </button>\n          <p className=\"product__quantity\">{product.quantity}</p>\n          <button\n            title=\"Remove items\"\n            className=\"product__dec\"\n            onClick={handleDecreaseClick}\n          >\n            -\n          </button>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default CartProductCard\n","import React, { useContext } from 'react'\n\nimport EmptyCart from './EmptyCart'\nimport TotalCartCard from './TotalCartCard'\nimport CartProductCard from './CartProductCard'\n\nimport { CartContext } from '../Contexts/CartContext'\n\nconst Cart: React.FC = () => {\n  const { state, dispatch } = useContext(CartContext)\n\n  if (state.isVisible) {\n    // Hide scrollbars when Cart is visible\n    document.body.style.overflow = 'hidden'\n\n    if (state.total_items === 0) {\n      return <EmptyCart />\n    } else {\n      return (\n        <article className=\"cart\">\n          <TotalCartCard cartItems={state} />\n          <section className=\"cart__products\">\n            {state.items.map((item) => (\n              <CartProductCard\n                key={item.id}\n                product={item}\n                dispatch={dispatch}\n              />\n            ))}\n          </section>\n        </article>\n      )\n    }\n  } else {\n    // Show scrollbars when Cart is invisible\n    document.body.style.overflow = 'unset'\n\n    return <article className=\"cart--invis\"></article>\n  }\n}\n\nexport default Cart\n","import React from 'react'\n\nimport Header from './Header'\nimport Products from './Products'\nimport Cart from './Cart'\n\nimport ProductsContextProvider from '../Contexts/ProductsContext'\nimport CategoryContextProvider from '../Contexts/CategoryContext'\nimport CartContextProvider from '../Contexts/CartContext'\n\nconst App: React.FC = () => {\n  return (\n    <ProductsContextProvider>\n      <CategoryContextProvider>\n        <CartContextProvider>\n          <Header />\n          <Products />\n          <Cart />\n        </CartContextProvider>\n      </CategoryContextProvider>\n    </ProductsContextProvider>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport App from './Components/App'\n\nimport './Styles/index.scss'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}